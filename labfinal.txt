#include <windows.h>
#include <GL/glut.h>
#include <stdlib.h>
#include <math.h>

void init()
{
    glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
    glOrtho(-15,15,-15,15,-15,5);
}
void circle(GLfloat rx,GLfloat ry,GLfloat cx,GLfloat cy)//radius_x,radius_y,certre_position_x,centre_position_y
{

    glBegin(GL_TRIANGLE_FAN);
    glVertex2f(cx,cy);

    for(int i=0;i<=100;i++)

    {
        float angle = 2.0f * 3.1416f * i/100;

        float x = rx * cosf(angle);
        float y = ry * sinf(angle);

        glVertex2f((x+cx),(y+cy));
    }
    glEnd();



}


void myDisplay()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0f, 0.0f, 0.0f);
    circle(6,5,0,0);

     glColor3f(1.0f, 0.0f, 0.0f);
    circle(1,4,0,5);



    glColor3f(0.0f, 0.0f, 0.0f);
    circle(1.25,1.5,0,0);

    glColor3f(1.0f, 1.0f, 1.0f);
    circle(1,1,0,0);

    glColor3f(0.0f, 0.0f, 0.0f);
    circle(.25,.25,0,0);



    glColor3f(0.0f, 0.0f, 0.0f);
    circle(1.25,1.5,2,0);

    glColor3f(1.0f, 1.0f, 1.0f);
    circle(1,1,2,0);

    glColor3f(0.0f, 0.0f, 0.0f);
    circle(.25,.25,2,0);

     glBegin(GL_POLYGON);
    glColor3f(0,0,0);
    glVertex2f(1,2);
    glVertex2f(1,1);
    glVertex2f(6,2.5);
    glVertex2f(5.5,3);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(0,0,0);
    glVertex2f(-3.5,3);
    glVertex2f(-5,2.5);
    glVertex2f(1.0,1.0);
    glVertex2f(1,2);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(0,0,0);
    glVertex2f(1,0);
    glVertex2f(0,-2);
    glVertex2f(3,-2);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(1,1,0);
    glVertex2f(1,0);
    glVertex2f(0.2,-1.9);
    glVertex2f(2.9,-1.9);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(1,1,0);
    glVertex2f(0,-2);
    glVertex2f(1,-3);
    glVertex2f(2.5,-2);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(0,0,0);
    glVertex2f(-5.5,0);
    glVertex2f(-10,3);
    glVertex2f(-10,-1);

    glEnd();















    glFlush();
}
int main()
{
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(600, 600);
    glutInitWindowPosition(200, 200);
    glutCreateWindow("Circle Application");
    init();
    glutDisplayFunc(myDisplay);
    glutMainLoop();
    return 0;
}
